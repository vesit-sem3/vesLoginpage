//this file contains combined code for java application for 'canteen payment system' 
//to access complete seprate the code on ide according to different interfaces available 

//code starts here

//FIRST:-
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

public class First extends JFrame implements ActionListener {

    //    JFrame first;
    JButton Order;
    JButton Admin;

    First() {
        ImageIcon bhat=new ImageIcon("BHATURE.jpg");
//        first = new JFrame("HOME");
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        getContentPane().setLayout(new GridLayout(2,1,12,12));
        setSize(359,447);
        Order=new JButton("ORDER");
        Order.setBackground(new Color(255, 140, 0));
        Order.setForeground(new Color(0, 0, 139));
        Order.setFont(new Font("Algerian", Font.BOLD, 24));
        Order.setBounds(100,100,90,90);
        Order.addActionListener(this);

        Order.setFocusable(false);
        Admin=new JButton("ADMIN LOGIN");
        Admin.setForeground(new Color(0, 0, 128));
        Admin.setFont(new Font("Algerian", Font.BOLD, 24));
        Admin.setBackground(new Color(255, 140, 0));
        Admin.setBounds(100,100,40,40);
        Admin.addActionListener(this);
        Admin.setFocusable(false);
        setVisible(true);
        getContentPane().add(Order);
        getContentPane().add(Admin);

    }


    public void actionPerformed(ActionEvent e) {
        if (e.getSource()==Order){
            SwingUtilities.invokeLater(new Runnable() {

                public void run() {
                    new Menu();
                }
            });
            dispose();

        }
        if(e.getSource()==Admin){
            new Login();
            dispose();
        }

    }
}



//MENU
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;
import java.lang.Math;
import javax.swing.border.Border;
import java.io.*;
import java.sql.*;
import java.awt.EventQueue;
import java.sql.*;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

public class Menu extends JFrame implements ActionListener {

    JButton Pay;
    String text;
    String url = "jdbc:mysql://localhost:3306/canteen";
    String user = "root";
    String password = "karan1010";

    int c;
    int max = 100;
    int min = 1;
    int range = max - min + 1;
    int token = (int) (Math.random() * range) + min;
    JScrollPane scrollpane;
    String Items[] = {"  Chinese Samosa ", "  Vada Pav ", "  Chhole Bhature ", "  Dosa ", "  Medu Vada(2_P) ", "  Misal Pav ", "  Thali "};
    int price[] = { 16, 14, 52, 30, 30, 25, 50};
    int Total;
    JTextField field[][] = new JTextField[8][1];
    JLabel totalLabel;
    Border border = BorderFactory.createLineBorder(Color.cyan, 3);
    private JLabel lblNewLabel;


    public Menu() {
        super("MENU");
        setBackground(new Color(47, 79, 79));
        setSize(500, 500);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        init();
        setVisible(true);
    }

    public void init () {

        JPanel p = new JPanel();
        p.setBackground(new Color(245, 245, 220));
        p.setSize(600, 600);
        p.setLayout(new GridLayout(9, 2, 7, 7));
        for (int row = 0; row < 9; row++) {
            ButtonGroup bg = new ButtonGroup();
            for (int col = 0; col < 2; col++) {
                if (row == 0) {
                    p.add(new JLabel(" "));
                } else {
                    if (col == 0 && row != 8) {
                        p.add(new JLabel(Items[row - 1] + "-" + price[row - 1] + "Rs"));
                    } else if (row == 8 && col == 0) {
                        Pay = new JButton("PAY");
                        Pay.setSize(new Dimension(100, 100));
                        Pay.addActionListener(this);
                        Pay.setFocusable(false);
                        p.add(Pay);
                        break;
                    } else if (row < 8 && col == 1) {
                        field[row - 1][col - 1] = new JTextField();
                        field[row - 1][col - 1].setPreferredSize(new Dimension(250, 50));
                        field[row - 1][col - 1].addActionListener(this);
                        field[row - 1][col - 1].setText("");
                        p.add(field[row - 1][col - 1]);
                    }
                }
            }
        }
        scrollpane = new JScrollPane(p);

        lblNewLabel = new JLabel("                                   ENTER YOUR ORDER HERE");
        lblNewLabel.setFont(new Font("Bradley Hand ITC", Font.BOLD, 15));
        lblNewLabel.setBackground(new Color(0, 128, 0));
        p.add(lblNewLabel);
        getContentPane().add(scrollpane, BorderLayout.CENTER);
        totalLabel = new JLabel("Total: 0 Rs");
        totalLabel.setBackground(new Color(0, 0, 0));
        totalLabel.setHorizontalAlignment(JLabel.CENTER);
        totalLabel.setBorder(border);
        getContentPane().add(totalLabel, BorderLayout.SOUTH);
    }

    @Override
    public void actionPerformed (ActionEvent e){
        Object source = e.getSource();
        if (source instanceof JTextField) {
            try {
                JTextField button = (JTextField) source;
                int row = -1;
                int col = -1;
                for (int i = 0; i < 9; i++) {
                    for (int j = 2; j <= 2; j++) {
                        if (field[i][j - 2] == button) {
                            row = i;
                            col = j;
                            break;
                        }
                    }
                    if (row != -1) {
                        break;
                    }
                }

                if (row != -1 && col != -1) {
                    try {
                        text = field[row][col - 2].getText();

                        Connection con = DriverManager.getConnection(url, user, password);
                        PreparedStatement ps=con.prepareStatement("INSERT INTO ORDERS(Order_id,Item_name,Item_quantity,Pay_Amount)VALUES(?,?,?,?)");
                        ps.setInt(1,token);
                        ps.setString(2,Items[row]);
                        c = Integer.parseInt(text);
                        if (c == 0 || c > 100) {
                            JOptionPane.showMessageDialog(null, "Please Enter a Valid Quantity!", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                        ps.setInt(3,c);
                        Total += c * price[row];
                        int s_row=c * price[row];
                        totalLabel.setText("Token: " + token + " Total: " + Total + " Rs");

                        ps.setInt(4,s_row);
                        ps.execute();
                        con.close();
                    }catch (SQLException ex){
                        System.out.println(ex);
                    }
                }
            } catch (NumberFormatException exc) {
                JOptionPane.showMessageDialog(null, "Please Enter a Valid Quantity!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if (source instanceof JButton) {
            SwingUtilities.invokeLater(() -> {
                PayMent payment = new PayMent(token); // Replace "42" with your order ID
                payment.setVisible(true);
            });
        }

    }



    public static void main (String[]args){
        new First();
    }
}



//PAYMENT
import javax.swing.*;
import java.awt.Desktop;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.net.URISyntaxException;
import java.net.URI;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

public class PayMent extends JFrame implements ActionListener {
    JFrame Pay;
    String url = "jdbc:mysql://localhost/canteen";
    String user = "root";
    String password = "karan1010";
    JRadioButton GPay;
    JRadioButton Cash;
    JRadioButton PayTm;
    int y;
    JButton Review;

    PayMent(int x) {
        y=x;
        Pay = new JFrame("PayMent");
        Pay.setBackground(new Color(240, 230, 140));
        Pay.setDefaultCloseOperation(EXIT_ON_CLOSE);
        Pay.setLocationRelativeTo(null);
        Pay.getContentPane().setLayout(new GridLayout(1,3,12,12));
        GPay = new JRadioButton("Gpay");
        GPay.setBackground(new Color(211, 211, 211));
        Cash = new JRadioButton("Cash");
        Cash.setBackground(new Color(211, 211, 211));
        PayTm = new JRadioButton("PayTm");
        PayTm.setBackground(new Color(211, 211, 211));
        Review=new JButton("Write Review");
        Review.setFont(new Font("Arial", Font.BOLD, 11));
        Review.setBackground(new Color(238, 232, 170));
        Review.setBounds(100,100,95,95);
        GPay.addActionListener(this);
        PayTm.addActionListener(this);
        Review.addActionListener(this);
        Review.setFocusable(false);
        ButtonGroup Method = new ButtonGroup();
        Method.add(GPay);
        Method.add(Cash);
        Method.add(PayTm);
        Pay.getContentPane().add(GPay);
        Pay.getContentPane().add(Cash);
        Pay.getContentPane().add(PayTm);
        Pay.getContentPane().add(Review);
        Pay.pack();
        Pay.setVisible(true);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        try {
            Desktop d = Desktop.getDesktop();
            if (e.getSource() == GPay) {
                d.browse(new URI("https://pay.google.com/about/"));
                try{

                    Connection con = DriverManager.getConnection(url, user, password);
                    PreparedStatement ps = con.prepareStatement("update orders set Pay_Mode='GPay', Pay_Status='UNPAID' where Order_id=?");
                    ps.setInt(1, y);
                    ps.execute();
                    con.close();
                }
                catch (SQLException ex){
                    System.out.println(ex);
                }

            } else if (e.getSource()==Cash){

                try{

                    Connection con = DriverManager.getConnection(url, user, password);
                    PreparedStatement ps = con.prepareStatement("update orders set Pay_Mode='Cash', Pay_Status='UNPAID' where Order_id=?");
                    ps.setInt(1, y);
                    ps.execute();
                    con.close();
                }
                catch (SQLException ex){
                    System.out.println(ex);
                }

            } else if (e.getSource() == PayTm) {
                d.browse(new URI("https://paytm.com/"));
                try{
                    Connection con = DriverManager.getConnection(url, user, password);
                    PreparedStatement ps = con.prepareStatement("update orders set Pay_Mode='PayTm', Pay_Status='UNPAID' where Order_id=?");
                    ps.setInt(1,y);
                    ps.execute();
                    con.close();
                }
                catch (SQLException ex){
                    System.out.println(ex);
                }
            }
            else if (e.getSource()==Review){
                SwingUtilities.invokeLater(() -> {
                    Review review = new Review(y); 
                    review.setVisible(true);
                });
                Pay.dispose();
            }
        }catch (IOException excp) {
            System.out.println("ERROR");
        }  catch (URISyntaxException excp) {
            System.out.println("ERROR");
        }
    }
}


//REVIEW
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class Review extends JFrame implements ActionListener {
    String url = "jdbc:mysql://localhost/canteen";
    String user = "root";
    String password = "karan1010";
    JFrame Text;
    JButton submit;
    JTextField write;
    int z;
    Review(int x){
        z=x;
        Text=new JFrame("REVIEW");
        Text.setDefaultCloseOperation(EXIT_ON_CLOSE);
        Text.setLocationRelativeTo(null);
        Text.setLayout(new FlowLayout());
        submit=new JButton("SUBMIT");
        submit.addActionListener(this);
        write=new JTextField();
       write.setPreferredSize(new Dimension(250,50));
       write.setText("WRITE REVIEW");
       Text.add(submit);
       Text.add(write);
       Text.pack();
       Text.setVisible(true);


    }
    public void actionPerformed(ActionEvent e){
if (e.getSource()==submit){
    String n=write.getText();
    submit.setEnabled(false);
    write.setEditable(false);
    try{
        Connection con = DriverManager.getConnection(url, user, password);
        PreparedStatement ps = con.prepareStatement("update orders set Review = ? where Order_id = ?");
        ps.setString(1,n);
        ps.setInt(2,z);
        ps.execute();
        con.close();
        Text.dispose();
    }catch (SQLException ex){
        System.out.println(ex);
    }
}
    }
}


//ADMIN LOGIN

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class Login extends JFrame implements ActionListener {
    String password="Ves1972";
    JFrame login;
    String word;
    JPanel p;

    JTextField pass;
    JButton submit;
    JButton forgot;
    Login(){
        login=new JFrame("LOGIN PAGE");
        login.setDefaultCloseOperation(EXIT_ON_CLOSE);
        login.setLocationRelativeTo(null);
        p=new JPanel();
        p.setSize(400,400);
        p.setLayout(new GridLayout(3,1,10,10));
        pass=new JTextField();
        pass.setPreferredSize(new Dimension(250,40));
        submit=new JButton("SUBMIT");
        submit.addActionListener(this);

        p.add(new JLabel("Password(Upto 8 characters): "));
        p.add(pass);
        p.add(submit);

        login.add(p);
        login.pack();
        login.setVisible(true);
    }
    public  void actionPerformed(ActionEvent e){
        if (e.getSource()==submit){
            word=pass.getText();

            if(word.equals(password)) {
                new Table();
            }
            else{
                JOptionPane.showMessageDialog(null,"Please Enter a Valid Password!","Error",JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        System.out.println("Submitted response");

        login.dispose();

    }
}

//ADMIN FUNCTIONS


import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.lang.reflect.Field;
import javax.swing.table.DefaultTableModel;
import java.sql.*;

public class Table implements ActionListener {

    JFrame f;
    JButton logout;
    JButton cancel;
    int t;
    JTextField field;
    JPanel p;
    JLabel tot;
    JPanel p1;
    int c;
    JTable table;

    JPanel p5;
    JPanel p3;
    JButton paid;
    DefaultTableModel model = new DefaultTableModel();
    String col4Value;
    String col6Value;
    String url = "jdbc:mysql://localhost:3306/canteen";
    String user = "root";
    String password = "karan1010";
    String k;


    Table() {
        f = new JFrame();
        f.setLayout(new BorderLayout());
        p = new JPanel();

        logout=new JButton("Logout");
        logout.setSize(60,60);
        logout.addActionListener(this);
        f.setTitle("ORDER SUMMARY");
        field=new JTextField(10);
        field.setText("SEARCH TOKEN");
        field.setSize(250,40);
        field.setHorizontalAlignment(JTextField.RIGHT);
        field.addActionListener(this);
        p.add(field,BorderLayout.WEST);
        p.add(logout,BorderLayout.NORTH);
        f.add(p,BorderLayout.NORTH);
        f.setSize(400, 400);
        f.setVisible(true);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if(e.getSource()==field){
            String n=field.getText();
            t=Integer.parseInt(n);
            if (t == 0 || t > 100) {
                JOptionPane.showMessageDialog(null, "Please Enter a Valid Quantity!", "Error", JOptionPane.ERROR_MESSAGE);
            }
            p1=new JPanel();
            p3=new JPanel();
            paid=new JButton("PAID");
            paid.setSize(60,60);
            paid.addActionListener(this);
            cancel=new JButton("CANCEL");
            cancel.setSize(60,60);
            cancel.addActionListener(this);
            table=new JTable();
            model.addColumn("Order_Id");
            model.addColumn("Item_name");
            model.addColumn("Item Quantity");
            model.addColumn("Total");
            model.addColumn("Pay_Mode");
            model.addColumn("Pay_Status");
            model.addColumn("Review");
            table.setModel(model);

            try{
tot=new JLabel();
                Connection connection = DriverManager.getConnection(url, user, password);
                PreparedStatement ps2=connection.prepareStatement("SELECT TOTAL(?) as total_amount");
                ps2.setInt(1,t);
               ResultSet rs2=ps2.executeQuery();
               while(rs2.next()){
                   k=rs2.getString("total_amount");
               }
               tot.setText("Total: "+k+"Rs");
                PreparedStatement ps=connection.prepareStatement("SELECT Order_id,Item_name,Item_quantity,Pay_Amount,Pay_Mode,Pay_Status,Review FROM ORDERS WHERE ORDER_ID=? GROUP BY ORDER_ID,Item_name,Item_quantity,Pay_Amount,Pay_Mode,Pay_Status,Review");
                ps.setInt(1,t);

                 ResultSet rs=ps.executeQuery();
                while (rs.next()) {
                    String col1Value = rs.getString("Order_Id");
                    String col2Value = rs.getString("Item_name");
                    String col3Value =rs.getString("Item_Quantity");
                    col4Value=rs.getString("Pay_Amount");
                    String col5Value = rs.getString("Pay_Mode");
                   col6Value =rs.getString("Pay_Status");
                    String col7Value = rs.getString("Review");
                    model.addRow(new Object[]{col1Value, col2Value, col3Value,col4Value,col5Value,col6Value,col7Value});

                    p1.add(table);
                    p3.add(tot,BorderLayout.EAST);
                    p3.add(paid,BorderLayout.NORTH);
                    p3.add(cancel,BorderLayout.SOUTH);
                    f.add(p1,BorderLayout.CENTER);
                    f.add(p3,BorderLayout.SOUTH);
                    f.pack();
                }
                connection.close();
            }
            catch (Exception ex) {
              System.out.println(ex);
            }

        }
        if(e.getSource()==paid){
            int selectedRow = table.getSelectedRow();
            if (selectedRow >= 0) {

                col6Value = "Paid";
                model.setValueAt("Paid", selectedRow, 5);
                table.setModel(model);
                Object a=model.getValueAt(selectedRow,0);
                String b=a.toString();
                c=Integer.parseInt(b);

                try {
                    Connection con = DriverManager.getConnection(url, user, password);
                    PreparedStatement ps = con.prepareStatement("UPDATE orders SET Pay_Status='Paid' WHERE Order_id = ?");
                    ps.setInt(1,c);
                    ps.execute();
                    con.close();
                } catch (SQLException ex) {
                    System.out.println(ex);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please select a row in the table to mark as 'Paid'.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        if(e.getSource()==cancel){
            int selectedRow = table.getSelectedRow();
            if (selectedRow >= 0) {

                col6Value = "Cancelled";
                model.setValueAt("Cancelled", selectedRow, 5);
                table.setModel(model);
                Object a=model.getValueAt(selectedRow,0);
                String b=a.toString();
                c=Integer.parseInt(b);

                try {
                    Connection con = DriverManager.getConnection(url, user, password);
                    PreparedStatement ps = con.prepareStatement("DELETE FROM ORDERS WHERE Order_id = ?");
                    ps.setInt(1, c);
                    ps.execute();
                    con.close();
                } catch (SQLException ex) {
                    System.out.println(ex);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please select a row in the table to mark as 'Paid'.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        if(e.getSource()==logout){
            int x =JOptionPane.showConfirmDialog(null,"Do you want to logout?","Confirmation",JOptionPane.YES_NO_OPTION);
            if(x==0) {
                System.exit(0);
            }
        }
    }


public static void main(String []args){
        new Table();
}
}

//ORDER(DATABASE TABLE)
CREATE TABLE ORDERS(
Order_id INT ,
Item_name VARCHAR(75),
Item_quantity INT,
Pay_Amount INT,
Pay_Mode VARCHAR(10),
Pay_Status VARCHAR(7),
Review VARCHAR(40));

//TOTAL PAY AMOUNT (DATABASE FUNCTION)
DELIMITER $$
CREATE FUNCTION TOTAL(N1 INT) RETURNS INT
READS SQL DATA
BEGIN
  DECLARE TEMP INT;
  SELECT SUM(Pay_Amount) INTO TEMP FROM orders WHERE ORDER_ID = N1;
  RETURN TEMP;
END$$
DELIMITER ;
